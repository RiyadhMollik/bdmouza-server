# Generated by Django 4.2.11 on 2025-10-01 18:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EpsConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_url', models.URLField(help_text='EPS API Base URL (e.g., https://eps.example.com)', max_length=255)),
                ('username', models.CharField(help_text='EPS API Username', max_length=100)),
                ('password', models.CharField(help_text='EPS API Password', max_length=100)),
                ('hash_key', models.CharField(help_text='EPS Hash Key for authentication', max_length=255)),
                ('merchant_id', models.CharField(help_text='EPS Merchant ID', max_length=100)),
                ('store_id', models.CharField(help_text='EPS Store ID', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Enable/Disable EPS payment gateway')),
                ('is_sandbox', models.BooleanField(default=True, help_text='Use sandbox environment for testing')),
                ('success_url', models.URLField(blank=True, help_text='Success callback URL (optional - will use default)', max_length=255)),
                ('fail_url', models.URLField(blank=True, help_text='Failure callback URL (optional - will use default)', max_length=255)),
                ('cancel_url', models.URLField(blank=True, help_text='Cancel callback URL (optional - will use default)', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'EPS Configuration',
                'verbose_name_plural': 'EPS Configurations',
            },
        ),
        migrations.CreateModel(
            name='EpsTokenCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text="Cache key (e.g., 'eps_token')", max_length=100, unique=True)),
                ('value', models.TextField(help_text='Cached token value')),
                ('expires_at', models.DateTimeField(help_text='Token expiration time')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'EPS Token Cache',
                'verbose_name_plural': 'EPS Token Cache',
            },
        ),
        migrations.CreateModel(
            name='EpsTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('merchant_transaction_id', models.CharField(help_text='Unique merchant transaction ID', max_length=100, unique=True)),
                ('eps_transaction_id', models.CharField(blank=True, help_text='EPS system transaction ID', max_length=100, null=True)),
                ('customer_order_id', models.CharField(help_text="Customer's order ID", max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=10)),
                ('currency', models.CharField(default='BDT', help_text='Currency code', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_status', models.CharField(blank=True, help_text='EPS payment status', max_length=50)),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_phone', models.CharField(max_length=20)),
                ('customer_address', models.TextField()),
                ('customer_city', models.CharField(default='Dhaka', max_length=50)),
                ('customer_state', models.CharField(default='Dhaka', max_length=50)),
                ('customer_postcode', models.CharField(default='1000', max_length=10)),
                ('customer_country', models.CharField(default='BD', max_length=2)),
                ('product_name', models.CharField(default='Digital Product', max_length=255)),
                ('product_category', models.CharField(default='Digital', max_length=100)),
                ('no_of_items', models.IntegerField(default=1)),
                ('redirect_url', models.URLField(blank=True, help_text='EPS redirect URL for payment', max_length=500)),
                ('callback_data', models.JSONField(blank=True, help_text='Raw callback data from EPS', null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Whether transaction has been verified with EPS')),
                ('verification_attempts', models.IntegerField(default=0, help_text='Number of verification attempts')),
                ('last_verification_at', models.DateTimeField(blank=True, help_text='Last verification attempt timestamp', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text="Customer's IP address", null=True)),
                ('user_agent', models.TextField(blank=True, help_text="Customer's user agent")),
                ('financial_entity_id', models.IntegerField(default=0)),
                ('financial_entity_name', models.CharField(blank=True, help_text='Bank or financial institution name', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Transaction completion timestamp', null=True)),
                ('user', models.ForeignKey(blank=True, help_text='Associated user account', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'EPS Transaction',
                'verbose_name_plural': 'EPS Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EpsWebhookLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(default='POST', max_length=10)),
                ('url', models.URLField(max_length=500)),
                ('headers', models.JSONField(blank=True, help_text='Request headers', null=True)),
                ('body', models.TextField(blank=True, help_text='Request body/payload')),
                ('query_params', models.JSONField(blank=True, help_text='URL query parameters', null=True)),
                ('response_status', models.IntegerField(blank=True, help_text='HTTP response status code', null=True)),
                ('response_body', models.TextField(blank=True, help_text='Response body')),
                ('is_processed', models.BooleanField(default=False, help_text='Whether webhook was processed successfully')),
                ('processing_errors', models.TextField(blank=True, help_text='Any errors during processing')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='Client IP address', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='Client user agent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('transaction', models.ForeignKey(blank=True, help_text='Related EPS transaction', null=True, on_delete=django.db.models.deletion.SET_NULL, to='epspayment.epstransaction')),
            ],
            options={
                'verbose_name': 'EPS Webhook Log',
                'verbose_name_plural': 'EPS Webhook Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='epstransaction',
            index=models.Index(fields=['merchant_transaction_id'], name='epspayment__merchan_1934db_idx'),
        ),
        migrations.AddIndex(
            model_name='epstransaction',
            index=models.Index(fields=['eps_transaction_id'], name='epspayment__eps_tra_364e3f_idx'),
        ),
        migrations.AddIndex(
            model_name='epstransaction',
            index=models.Index(fields=['customer_order_id'], name='epspayment__custome_1fb215_idx'),
        ),
        migrations.AddIndex(
            model_name='epstransaction',
            index=models.Index(fields=['status'], name='epspayment__status_c9e714_idx'),
        ),
        migrations.AddIndex(
            model_name='epstransaction',
            index=models.Index(fields=['created_at'], name='epspayment__created_10b24e_idx'),
        ),
    ]
